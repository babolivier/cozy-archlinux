#!/bin/sh
# Install scripts for Cozy
# Maintainer: Brendan Abolivier <brendan@cozycloud.cc>

# Fancy message is fancy
msg_blue() {
    printf "${blue}==>${bold} $1${all_off}\n"
}

prompt_blue() {
    printf "${blue}==>${bold} $1${all_off}"
}

all_off="$(tput sgr0)"
bold="${all_off}$(tput bold)"
blue="${bold}$(tput setaf 4)"

post_install() {
    msg_blue "Thanks for using Cozy. This package is still being tested, if you encounter any difficulty with it, please head over the AUR comments, the Cozy forums or https://github.com/babolivier/cozy-archlinux/issues to give your feedback."

    msg_blue "Checking Node.js version"
    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/compare-version.py > /usr/share/cozy/compare-version.py
    NODEJS=`which node`
    if [ -x $NODEJS ]; then
        NODE_VERSION=`$NODEJS -v`
        python2 /usr/share/cozy/compare-version.py "$NODE_VERSION" '>=' '0.10.20' && RESULT=$? || RESULT=$?
        if [ "$RESULT" = "1" ]; then
            msg_blue "Node.js version is too low. Recommended versions are all 0.10.xx versions starting from 0.10.20"
            exit 1
        fi
        python2 /usr/share/cozy/compare-version.py "$NODE_VERSION" '<' '0.12.00' && RESULT=$? || RESULT=$?
        if [ "$RESULT" = "1" ]; then
            msg_blue "Node.js version is too high. Recommended versions are all 0.10.xx versions starting from 0.10.20"
            exit 1
        fi
    fi

    msg_blue "Checking ports availability"
    lsof -i :9001 > /dev/null 2>&1
    if [ $? = "0" ]; then
        msg_blue "Port 9001 (used by supervisor) is already in use on this machine."
        exit 1
    fi
    lsof -i :9002 > /dev/null 2>&1
    if [ $? = "0" ]; then
        msg_blue "Port 9002 (used by the Cozy controller) is already in use on this machine."
        exit 1
    fi
    lsof -i :9101 > /dev/null 2>&1
    if [ $? = "0" ]; then
        msg_blue "Port 9101 (used by the Cozy Data System) is already in use on this machine."
        exit 1
    fi
    lsof -i :9103 > /dev/null 2>&1
    if [ $? = "0" ]; then
        msg_blue "Port 9103 (used by the Cozy Home) is already in use on this machine."
        exit 1
    fi
    lsof -i :9104 > /dev/null 2>&1
    if [ $? = "0" ]; then
        msg_blue "Port 9104 (used by the Cozy authentication proxy) is already in use on this machine."
        exit 1
    fi

    npm install -g coffee-script
    [ ! -d /usr/share/cozy ] && mkdir /usr/share/cozy
    msg_blue "Downloading config file for Cozy Indexer"
    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/supervisor-cozy-indexer > /usr/share/cozy/supervisor-cozy-indexer
    msg_blue "Downloading config file for Cozy Controller"
    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/supervisor-cozy-controller > /usr/share/cozy/supervisor-cozy-controller

    COZY_DOMAIN=
    msg_blue "Choose you Cozy's FQDN (fully-qualified domain name).\nA self-signed certificate will be issued for this domain only, and the web server will configured with this domain name."
    while [ -z $COZY_DOMAIN ]; do
        msg_blue "Domain name of your Cozy [cozy.example.tld]: "
        read res
        COZY_DOMAIN=$res
    done

    msg_blue "Chosen domain name for Cozy: $COZY_DOMAIN"

    msg_blue 'Installing NPM dependencies...'
    npm config set python /usr/bin/python2
    [ ! -d /usr/local/lib/node_modules/cozy-controller ] && npm install -g cozy-controller
    [ ! -d /usr/local/lib/node_modules/cozy-monitor ] && npm install -g cozy-monitor

    msg_blue 'Creating UNIX users...'
    id cozy >/dev/null 2>&1 || useradd -M cozy
    id cozy-data-system >/dev/null 2>&1 || useradd -M cozy-data-system
    id cozy-home >/dev/null 2>&1 || useradd -M cozy-home

    [ ! -d /etc/cozy ] && mkdir /etc/cozy
    chown -hR cozy /etc/cozy
    if [ ! -f /etc/cozy/couchdb.login ]; then
        msg_blue 'Configuring CouchDB'
        systemctl enable couchdb
        systemctl start couchdb
        msg_blue 'Generating CouchDB tokens...'
        pwgen -1 > /etc/cozy/couchdb.login && \
        pwgen -1 >> /etc/cozy/couchdb.login
        COUNT=0;MAX=20
        while ! curl -s 127.0.0.1:5984 >/dev/null; do
            let "COUNT += 1"
            msg_blue "Waiting for CouchDB to start... ($COUNT/$MAX)"
            if [[ $COUNT -gt $MAX ]]; then
                msg_blue "CouchDB is too long to start"
                exit 1
            fi
            sleep 5
        done
        curl -s -X PUT 127.0.0.1:5984/_config/admins/$(head -n1 /etc/cozy/couchdb.login) -d "\"$(tail -n1 /etc/cozy/couchdb.login)\""
    fi
    chown cozy-data-system /etc/cozy/couchdb.login
    chmod 640 /etc/cozy/couchdb.login

    msg_blue 'Starting supervisor'
    systemctl enable supervisord
    systemctl start supervisord

    msg_blue 'Configuring Cozy Controller...'
    CONFIGFILE=/etc/supervisor.d/cozy-controller.ini
    if [ -f $CONFIGFILE ]; then
        BEFORE=$(sha1sum $CONFIGFILE | cut -f1 -d' ')
        EXISTING=true
    else
        BEFORE=
        EXISTING=false
    fi

    CONFIGFILE=/usr/share/cozy/supervisor-cozy-controller
    AFTER=$(sha1sum $CONFIGFILE | cut -f1 -d' ')
    if [ "$BEFORE" != "$AFTER" ]; then
        if $EXISTING; then
            echo "Your configuration file for Cozy Controller is different from the one included in this package:"
            diff /etc/supervisor.d/cozy-controller.ini /usr/share/cozy/supervisor-cozy-controller
            while true; do
                msg_blue "Do you want to install the new version? [Y/n]"
                read yn
                case $yn in
                    [Nn]* ) echo "The new configuration file is stored on /usr/share/cozy/supervisor-cozy-controller"; break;;
                    * ) mv /etc/supervisor.d/cozy-controller.ini /etc/supervisor.d/cozy-controller.ini.old;
                        cp /usr/share/cozy/supervisor-cozy-controller /etc/supervisor.d/cozy-controller.ini;
                        echo "The old configuration file has been renamed as /etc/supervisor.d/cozy-controller.ini.old"
                        break;;
                esac
            done
        else
            cp /usr/share/cozy/supervisor-cozy-controller /etc/supervisor.d/cozy-controller.ini
        fi
        supervisorctl reload
    fi
    COUNT=0;MAX=20
    while ! curl -s 127.0.0.1:9002 >/dev/null; do
        let "COUNT += 1"
        msg_blue "Waiting for Cozy Controller to start... ($COUNT/$MAX)"
        if [[ $COUNT -gt $MAX ]]; then
            msg_blue "Cozy Controller is too long to start"
            exit 1
        fi
        sleep 5
    done

    msg_blue 'Installing Cozy Platform apps...'
    if [ ! -d /usr/local/cozy/apps/data-system ]; then
        cozy-monitor install-cozy-stack
        if [ $? = "1" ]; then echo "Error while installing the platform" && exit 1; fi
    fi
    cozy-monitor start data-system
    if [ ! -d /usr/local/cozy/apps/home ]; then
        cozy-monitor install home
        if [ $? = "1" ]; then echo "Error while installing the platform" && exit 1; fi
    fi
    cozy-monitor start home
    if [ ! -d /usr/local/cozy/apps/proxy ]; then
        cozy-monitor install proxy
        if [ $? = "1" ]; then echo "Error while installing the platform" && exit 1; fi
    fi
    cozy-monitor start proxy

    msg_blue "Downloading instance configuration script"
    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/cozy-get-instance-param.py > /usr/share/cozy/cozy-get-instance-param.py

    CURRENT_DOMAIN=$(python2 /usr/share/cozy/cozy-get-instance-param.py domain)
    if [ "$CURRENT_DOMAIN" = "$COZY_DOMAIN" ]; then
        msg_blue "Cozy already configured with domain: $COZY_DOMAIN"
    else
        msg_blue "Configure Cozy with domain: $COZY_DOMAIN"
        coffee /usr/local/cozy/apps/home/commands.coffee setdomain $COZY_DOMAIN
    fi

    CURRENT_BACKGROUND=$(python2 /usr/share/cozy/cozy-get-instance-param.py background)
    if [ "$CURRENT_BACKGROUND" != "None" ]; then
        msg_blue "Cozy already configured with a background: $CURRENT_BACKGROUND"
    else
        msg_blue "Configure Cozy with default background"
        curl -X POST http://localhost:9103/api/instance -H "Content-Type: application/json" -d '{"background":"background-07"}'
        echo ''
    fi

    msg_blue "Install default apps"
    for app in calendar contacts photos emails files sync; do
        if [ ! -f /usr/local/cozy/apps/.first-install-$app ]; then
            if [ -d /usr/local/cozy/apps/$app ]; then
                touch /usr/local/cozy/apps/.first-install-$app
            else
                cozy-monitor install $app && touch /usr/local/cozy/apps/.first-install-$app
            fi
        fi
    done

    if [ ! -f /usr/local/cozy/apps/.first-install-import-from-google ]; then
        if [ -d /usr/local/cozy/apps/import-from-google ]; then
            touch /usr/local/cozy/apps/.first-install-import-from-google
        else
            cozy-monitor install import-from-google -r https://github.com/cozy-labs/import-from-google.git && touch /usr/local/cozy/apps/.first-install-import-from-google
        fi
    fi

    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/debian-reconfigure-cozy-domain.sh > /usr/local/sbin/debian-reconfigure-cozy-domain.sh
    chmod +x /usr/local/sbin/debian-reconfigure-cozy-domain.sh
    echo "cozy-self-hosting ALL=NOPASSWD: /usr/local/sbin/debian-reconfigure-cozy-domain.sh" >> /etc/sudoers
    if [ ! -f /usr/local/cozy/apps/.first-install-self-hosting ]; then
        if [ -d /usr/local/cozy/apps/self-hosting ]; then
            touch /usr/local/cozy/apps/.first-install-self-hosting
        else
            cozy-monitor install self-hosting -r https://github.com/cozy/cozy-self-hosting.git && touch /usr/local/cozy/apps/.first-install-self-hosting
        fi
    fi

    msg_blue 'Generating SSL keys and certificates...'
    if [ ! -f /etc/cozy/dh.pem ]; then
        openssl dhparam -out /etc/cozy/dh.pem -outform PEM -2 2048
        chmod 400 /etc/cozy/dh.pem
    fi
    if [ ! -f /etc/cozy/server.key ]; then
        openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/cozy/server.key -out /etc/cozy/server.crt -days 3650 -subj "/CN=$COZY_DOMAIN"
        chmod 400 /etc/cozy/server.key
    fi

    if [ -f /etc/httpd/conf/httpd.conf ]; then
        msg_blue 'Configuring Apache2 for '$COZY_DOMAIN
        curl https://raw.githubusercontent.com/cozy/cozy-debian/master/apache-config > /usr/share/cozy/apache-config
        sed -i 's/apache2/httpd/' /usr/share/cozy/apache-config
        sed -i 's/\%COZY\_DOMAIN\%/'$COZY_DOMAIN'/' /usr/share/cozy/apache-config

        include=$(cat /etc/httpd/conf/httpd.conf | grep cozy)
        if [ ${#include} == 0 ]; then
            msg_blue 'This is your first time running this package. Adding some basic configuration...'
            sed -i 's/#LoadModule\ ssl\_module\ modules\/mod\_ssl\.so/LoadModule\ ssl\_module\ modules\/mod\_ssl\.so/' /etc/httpd/conf/httpd.conf
        sed -i 's/Listen 80/Listen 80\nListen 443/' /etc/httpd/conf/httpd.conf
            echo -e '\n#Cozy configuration\nInclude conf/extra/cozy.conf' >> /etc/httpd/conf/httpd.conf
            cp /usr/share/cozy/apache-config /etc/httpd/conf/extra/cozy.conf
            msg_blue 'Starting Apache2 web server...'
            systemctl enable httpd
            systemctl start httpd
        else
            msg_blue 'Checking existing configuration'
            CONFIGFILE=/etc/httpd/conf/extra/cozy.conf
            if [ -f $CONFIGFILE ]; then
                BEFORE=$(sha1sum $CONFIGFILE | cut -f1 -d' ')
            else
                BEFORE=
            fi

            CONFIGFILE=/usr/share/cozy/apache-config
            AFTER=$(sha1sum $CONFIGFILE | cut -f1 -d' ')
            if [ "$BEFORE" != "$AFTER" ]; then
                if $EXISTING; then
                    echo "Your configuration file for Apache is different from the one included in this package:"
                    diff /etc/httpd/conf/extra/cozy.conf /usr/share/cozy/apache-config
                    while true; do
                    msg_blue "Do you want to install the new version? [Y/n]"
                        read yn
                        case $yn in
                            [Nn]* ) echo "The new configuration file is stored on /usr/share/cozy/apache-config"; break;;
                            * ) mv /etc/httpd/conf/extra/cozy.conf /etc/httpd/conf/extra/cozy.conf.old;
                                cp /usr/share/cozy/apache-config /etc/httpd/conf/extra/cozy.conf;
                                echo "The old configuration file has been renamed as /etc/httpd/conf/extra/cozy.conf.old"
                                break;;
                        esac
                    done
                else
                    cp /usr/share/cozy/apache-config /etc/httpd/conf/extra/cozy.conf;
                fi
            msg_blue 'Restarting Apache2 web server...'
                systemctl restart httpd
            fi
        fi
    else
        msg_blue 'No web serveur has been detected on your system.'
    fi
}

pre_remove() {
    which cozy-monitor >/dev/null 2>&1
    RESULT=$?
    if [ "$RESULT" = "0" ]; then
        APPS="$(cozy-monitor status | grep -vE '(mta|postfix|couch|controller|data-system|ds|home|proxy)' | sed 's/:.*//;s/\[Error//' | xargs echo)"
        APPS="$APPS proxy home data-system"
        for app in $APPS ; do cozy-monitor uninstall $app ; done
    fi
    which supervisorctl >/dev/null 2>&1 && supervisorctl stop cozy-controller
}

post_remove() {
    msg_blue "The Cozy database contains all your user data. Keeping it could be troublesome for further installations."
    while true; do
        read -p "Do you want to erase the database? [Y/n] " yn
        case $yn in
            [Nn]* ) KEEP_DB=false; break;;
            * ) KEEP_DB=true; break;;
        esac
    done

    if [ $KEEP_DB ]; then
        COUCH_USER=$(sed -n '1,1p' /etc/cozy/couchdb.login)
        COUCH_PASS=$(sed -n '2,1p' /etc/cozy/couchdb.login)
        msg_blue "Purging cozy database"
        curl -X DELETE http://${COUCH_USER}:${COUCH_PASS}@127.0.0.1:5984/cozy
        msg_blue "Purging CouchDB cozy user"
        curl -X DELETE http://${COUCH_USER}:${COUCH_PASS}@127.0.0.1:5984/_config/admins/${COUCH_USER}
    else
        msg_blue "Keeping the Cozy database"
    fi
    [ -d /etc/cozy ] && msg_blue "Deleting /etc/cozy directory" && rm -rf /etc/cozy
    [ -d /usr/local/var/log/cozy ] && msg_blue "Deleting /usr/local/var/log/cozy directory" && rm -rf /usr/local/var/log/cozy
    [ -d /usr/local/cozy ] && msg_blue "Deleting /usr/local/cozy directory" && rm -rf /usr/local/cozy
    [ -f /var/httpd/conf/extra/cozy.conf ] && msg_blue "Erasing Apache2 configuration" && rm -f /var/httpd/conf/extra/cozy.conf
    sed -i 's/\n#Cozy configuration\nInclude conf/extra/cozy.conf//' /etc/httpd/conf/httpd.conf
    systemctl restart httpd
    msg_blue "Erasing supervisor configuration" && rm /etc/supervisor.d/cozy*
    supervisorctl reload
}

post_upgrade() {
    # Since the last version, we added a new app for self-hosted users
    msg_blue "Applying latest updates"
    curl https://raw.githubusercontent.com/cozy/cozy-debian/master/debian-reconfigure-cozy-domain.sh > /usr/local/sbin/debian-reconfigure-cozy-domain.sh
    chmod +x /usr/local/sbin/debian-reconfigure-cozy-domain.sh
    echo "cozy-self-hosting ALL=NOPASSWD: /usr/local/sbin/debian-reconfigure-cozy-domain.sh" >> /etc/sudoers
    if [ ! -f /usr/local/cozy/apps/.first-install-self-hosting ]; then
        if [ -d /usr/local/cozy/apps/self-hosting ]; then
            touch /usr/local/cozy/apps/.first-install-self-hosting
        else
            cozy-monitor install self-hosting -r https://github.com/cozy/cozy-self-hosting.git && touch /usr/local/cozy/apps/.first-install-self-hosting
        fi
    fi
}
